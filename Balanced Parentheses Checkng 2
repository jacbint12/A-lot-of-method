
import java.util.Arrays;
import java.util.Stack;

public class BalancedParentheses {
	
	public static void main(String[] args) {
		
		String[] inputs = {"{za[as(ab)ze]ds}","{[(dddz])}","{{[[(ds(ffd))]]}}"};		
			Arrays.stream(inputs).forEach(x -> {
			  boolean flag = checkBalancedParentheses(x);
			  System.out.println( flag ? "Balanced" : "NOt Balanced" );
	     	} );
	}
	
	private static boolean checkBalancedParentheses(String input){
		
		    Stack<String> myStack = new Stack<String>();
		     for(int i=0; i < input.length(); i++){
			    String str = ""+input.charAt(i);
			
		        if(str.equals("(") || str.equals("[") || str.equals("{")){  //Push  opening bracket into stack
			       myStack.push(str);
		         }
	        	//  Pop closing bracket and check if its a pair
	        	if(  (str.equals(")") || str.equals("]") || str.equals("}"))  && myStack.isEmpty() ) {
				    return false;
			      }
			    String opening = myStack.peek();
										
				if (  (str.equals(")") || str.equals("]") || str.equals("}"))  &&  (
						  (str.equals(")") && opening.equals("("))
						  || (str.equals("]") && opening.equals("[")) 
						  || (str.equals("}") && opening.equals("{")))  )  {
				  
					myStack.pop();
				 }
					
		     } // end for
		     
		     return input.length() > 0 && myStack.isEmpty();
	    } // end method checkBalancedParentheses
	
}


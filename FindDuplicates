import java.util.*;
import java.util.stream.Collectors;

public class Duplicates {

    public static int [] findDuplicates(int [] numbers) {


        List<Integer> asList = Arrays.stream(numbers).boxed().toList();

        //  first way
        Set<Integer> duplicates = asList.stream()
                .filter(e -> Collections.frequency(asList, e) > 1) // Filter elements appearing more than once
                .collect(Collectors.toSet()); // Collect as a Set to avoid duplicate values
        return duplicates.stream().mapToInt(Number::intValue).toArray();
    }

    //second way
    public static  List<Integer>  findDuplicateValues(int [] numbers) {

        return Arrays.stream(numbers).boxed().collect(Collectors.toMap(word -> word, word -> 1, Integer::sum))
                .entrySet()
                .stream()
                .filter(x -> x.getValue() > 1)
                .map(Map.Entry::getKey).toList();

    }


    public static void main(String[] args) {
        int data[] = {1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 5, 7, 5};

        System.out.println(Arrays.toString(findDuplicates(data)));
        System.out.println(findDuplicateValues(data));
    }
}


import java.util.Stack;

public class BalancedParenthesesCheckng {
 
 public static void main(String[] args) {
	
	 System.out.println("a*(b+c)-(d*e) : "+ checkBalanced("a*(b+c)-(d*e)"));
	 System.out.println("(a*(b-c)*{d+e} : " + checkBalanced("(a*(b-c)*{d+e}"));
	 System.out.println("{{[[((ffd))]]}} : "+ checkBalanced("{{[[((ffd))]]}}"));
 }
 
 public static String checkBalanced(String expr)  {
	 if (expr.isEmpty())
	 return "Balanced";
 
    Stack<Character> stack = new Stack<Character>();
	 for (int i = 0; i < expr.length(); i++)  {
	     char current = expr.charAt(i);

		 if (current == '{' || current == '(' || current == '[') { 
			 stack.push(current);
		 }
         if (current == '}' || current == ')' || current == ']') {
			 if (stack.isEmpty()) 
			 return "Not Balanced";
			 char last = stack.peek();
			 if (current == '}' && last == '{' || current == ')' && last == '(' || current == ']' && last == '[')
			 stack.pop();
			 else 
			 return "Not Balanced";
           } // end if
       } // end for

   return stack.isEmpty()?"Balanced":"Not Balanced";
 } // end checkBalanced
 
} // end class

